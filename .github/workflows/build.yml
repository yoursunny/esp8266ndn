name: build
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: arduino/setup-arduino-cli@v1.1.1
      - id: cores
        name: refresh Arduino cores
        run: |
          echo 'https://arduino.esp8266.com/stable/package_esp8266com_index.json,https://espressif.github.io/arduino-esp32/package_esp32_index.json,https://adafruit.github.io/arduino-board-index/package_adafruit_index.json' > ~/arduino-cores.txt
          arduino-cli version
          arduino-cli update --additional-urls "$(<~/arduino-cores.txt)"
          echo ::set-output name=d::$(sha256sum ~/.arduino15/package_*index.json | sha256sum | cut -d' ' -f1)
      - name: cache Arduino cores
        uses: actions/cache@v2
        with:
          path: ~/.arduino15/staging/packages
          key: cores-${{ steps.cores.outputs.d }}
      - name: install Arduino cores
        run: |
          arduino-cli core install esp8266:esp8266 esp32:esp32 adafruit:nrf52 --additional-urls "$(<~/arduino-cores.txt)"
          arduino-cli lib install ArduinoUnit
          arduino-cli lib install NimBLE-Arduino
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: install dependencies
        run: |
          sudo apt-get install -y --no-install-recommends clang-format-11 doxygen
          pip install adafruit-nrfutil esptool
      - uses: actions/checkout@v2
      - name: check code style
        run: |
          mk/format-code.sh
          git diff --exit-code
      - name: prepare Arduino libraries
        run: |
          mkdir -p $HOME/Arduino/libraries
          cd $HOME/Arduino/libraries
          ln -s $GITHUB_WORKSPACE esp8266ndn
          mkdir NDNph
          curl -fsLS https://github.com/yoursunny/NDNph/archive/${NDNPH_VERSION}.tar.gz | tar -C NDNph -xz --strip-components=1
          ln -s $HOME/Arduino/libraries/NDNph $GITHUB_WORKSPACE/../NDNph # for Doxygen
        env:
          NDNPH_VERSION: develop
      - name: compile examples
        run: |
          for B in esp8266:esp8266:nodemcuv2 esp32:esp32:esp32wrover esp32:esp32:esp32c3 adafruit:nrf52:feather52832; do
            ARCH=${B#*:}; ARCH=${ARCH%:*}
            for E in $(find ./examples -name '*.ino' -printf '%h\n'); do
              if [[ -f $E/.${ARCH}.test.skip ]]; then
                continue
              fi
              printf "\n----\033[1;35m Build %s in %s \033[0m----\n" ${E##*/} $B
              arduino-cli compile -b $B $E
              if [[ -f $E/.${ARCH}.test.extra ]]; then
                while IFS= read -r EXTRA_ARGS; do
                  printf "\n----\033[1;35m Rebuild with %s \033[0m----\n" "$EXTRA_ARGS"
                  arduino-cli compile -b $B $E $EXTRA_ARGS
                done < $E/.${ARCH}.test.extra
              fi
            done
          done
      - name: build docs
        run: docs/build.sh
      - name: deploy docs
        uses: South-Paw/action-netlify-deploy@v1.2.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          netlify-site-id: cf340d80-1709-45d9-878f-12570d9dcee0
          build-dir: ./docs/html/
        if: ${{ github.repository == 'yoursunny/esp8266ndn' && github.event_name == 'push' }}
